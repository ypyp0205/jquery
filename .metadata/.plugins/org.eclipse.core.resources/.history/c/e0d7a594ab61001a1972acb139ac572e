package kr.or.ddit.member.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;

import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.member.service.MemberServiceImpl;
import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.member.vo.ZipVO;

/**
 * Servlet implementation class MemberJoin
 */
@WebServlet("/MemberJoin")
public class MemberJoin extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public MemberJoin() {
		super();

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// 0. 클라이언트에서 요청시(전송) 전달값 받기
		// 직접 컬럼생성
	/*	
	    String mid = request.getParameter("mem_id");
		String mpass = request.getParameter("mem_pass");
		String mname = request.getParameter("mem_name");
		String mhp = request.getParameter("mem_hp");
		String mzip = request.getParameter("mem_zip");
		String madd1 = request.getParameter("mem_add1");
		String madd2 = request.getParameter("mem_add2");
		String mmail = request.getParameter("mem_mail");
		String mbir = request.getParameter("mem_bir");

		//vo에 저장하기
		MemberVO vo = new MemberVO();
		vo.setMem_add1(madd1);
		vo.setMem_add2(madd2);
		vo.setMem_bir(mbir);
		vo.setMem_hp(mhp);
		vo.setMem_id(mid);
		vo.setMem_mail(mmail);
		vo.setMem_name(mname);
		vo.setMem_pass(mpass);
		vo.setMem_zip(mzip);
	*/
		
		// SQL에서 컬럼가져오는 방법
		MemberVO vo = new MemberVO();
		
		BeanUtils.populate(vo, request.getParameterMap());
		
		
		// 1. service객체 얻기
		IMemberService service = MemberServiceImpl.getService();

		
		// 2. service메소드 호출 - 파라미터 : vo,
		// 결과값 받기 : 저장성공 : 저장한 id, 저장실패 : null 
		String resid = service.insertMember(vo);
		
		
		// 3. 결과값을 request에 저장
		request.setAttribute("resid", resid);
		request.setAttribute("mid", id);

		
		// 4. view페이지 이동
		request.getRequestDispatcher("0226/insert.jsp").forward(request, response);
		
	}
}
